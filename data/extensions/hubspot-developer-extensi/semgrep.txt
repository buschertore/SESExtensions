data/tempCode/hubspot-developer-extensi/options.html:68:731:warning(plaintext-http-link):			<li><a target="_blank" href="https://www.linkedin.com/in/gonzalotorreras/"><svg style="fill: #f1f1f1;width: 1em;vertical-align: bottom;margin-right: .5rem;color: #010101;" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="linkedin-in" class="svg-inline--fa fa-linkedin-in fa-w-14" role="img" viewBox="0 0 448 512"><path fill="currentColor" d="M100.28 448H7.4V148.9h92.88zM53.79 108.1C24.09 108.1 0 83.5 0 53.8a53.79 53.79 0 0 1 107.58 0c0 29.7-24.1 54.3-53.79 54.3zM447.9 448h-92.68V302.4c0-34.7-.7-79.2-48.29-79.2-48.29 0-55.69 37.7-55.69 76.7V448h-92.78V148.9h89.08v40.8h1.3c12.4-23.5 42.69-48.3 87.88-48.3 94 0 111.28 61.9 111.28 142.3V448z"/></svg>Gonzalo Torreras</a> -  <a target="_blank" href="http://gonzalotorreras.com/" title="Check my website!">gonzalotorreras.com</a> - HubSpot freelance developer</li>:This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.
data/tempCode/hubspot-developer-extensi/panel.js:41:17:warning(detect-non-literal-regexp):    var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),:RegExp() called with a `name` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.
