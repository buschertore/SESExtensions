data/tempCode/furigana-maker/src/background/messages/getKanjiMarks.ts:71:12:warning(direct-response-write):  res.send({ message });:Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML.
data/tempCode/furigana-maker/src/background/messages/getKanjiMarks.ts:207:10:warning(detect-non-literal-regexp):  return new RegExp(regex, 'u');:RegExp() called with a `kanas` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.
