data/tempCode/twitch-right-now-stream-n/config/env.js:56:45:warning(path-join-resolve-traversal):  .map(folder => path.resolve(appDirectory, folder)):Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
data/tempCode/twitch-right-now-stream-n/config/modules.js:21:55:warning(path-join-resolve-traversal):  const baseUrlResolved = path.resolve(paths.appPath, baseUrl);:Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
data/tempCode/twitch-right-now-stream-n/config/modules.js:64:55:warning(path-join-resolve-traversal):  const baseUrlResolved = path.resolve(paths.appPath, baseUrl);:Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
data/tempCode/twitch-right-now-stream-n/config/modules.js:85:55:warning(path-join-resolve-traversal):  const baseUrlResolved = path.resolve(paths.appPath, baseUrl);:Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
data/tempCode/twitch-right-now-stream-n/config/paths.js:10:63:warning(path-join-resolve-traversal):const resolveApp = relativePath => path.resolve(appDirectory, relativePath);:Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
data/tempCode/twitch-right-now-stream-n/src/App/rest/Backend.js:102:35:info(unsafe-formatstring):                    console.error(`Request error for endpoint '${endpointName}' :`, err);:Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.
