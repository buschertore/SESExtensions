data/tempCode/sync-watch/nginx/nginx.yc.conf:11:5:warning(header-redefinition):    add_header Content-Type text/plain;:The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.
data/tempCode/sync-watch/nginx/nginx.yc.conf:7:3:warning(insecure-ssl-version):  ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;:Detected use of an insecure SSL version. Secure SSL versions are TLSv1.2 and TLS1.3; older versions are known to be broken and are susceptible to attacks. Prefer use of TLSv1.2 or later.
data/tempCode/sync-watch/nginx/nginx.yc.conf:20:5:warning(possible-nginx-h2c-smuggling):    proxy_http_version 1.1;:Conditions for Nginx H2C smuggling identified. H2C smuggling allows upgrading HTTP/1.1 connections to lesser-known HTTP/2 over cleartext (h2c) connections which can allow a bypass of reverse proxy access controls, and lead to long-lived, unrestricted HTTP traffic directly to back-end servers. To mitigate: WebSocket support required: Allow only the value websocket for HTTP/1.1 upgrade headers (e.g., Upgrade: websocket). WebSocket support not required: Do not forward Upgrade headers.
data/tempCode/sync-watch/packages/syncwatch-extension/src/js/content.js:56:28:info(unsafe-formatstring):    if (debug) console.log(`%cbroadcast: ${eventSend.type}`, 'background: #fefe22;');:Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.
data/tempCode/sync-watch/packages/syncwatch-extension/src/js/content.js:201:32:info(unsafe-formatstring):        if (debug) console.log(`%crecieved: ${msg.data.type}`, 'background: #9966cc;');:Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.
data/tempCode/sync-watch/packages/syncwatch-extension/src/js/players/netflix/netflix.js:15:1:warning(insufficient-postmessage-origin-validation):window.addEventListener('message', (event) => {:No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
data/tempCode/sync-watch/yandex-cloud/docker-compose.yc.yaml:4:3:warning(no-new-privileges):  nginx::Service 'nginx' allows for privilege escalation via setuid or setgid binaries. Add 'no-new-privileges:true' in 'security_opt' to prevent this.
data/tempCode/sync-watch/yandex-cloud/docker-compose.yc.yaml:18:3:warning(no-new-privileges):  backend::Service 'backend' allows for privilege escalation via setuid or setgid binaries. Add 'no-new-privileges:true' in 'security_opt' to prevent this.
data/tempCode/sync-watch/yandex-cloud/docker-compose.yc.yaml:4:3:warning(writable-filesystem-service):  nginx::Service 'nginx' is running with a writable root filesystem. This may allow malicious applications to download and run additional payloads, or modify container files. If an application inside a container has to save something temporarily consider using a tmpfs. Add 'read_only: true' to this service to prevent this.
data/tempCode/sync-watch/yandex-cloud/docker-compose.yc.yaml:18:3:warning(writable-filesystem-service):  backend::Service 'backend' is running with a writable root filesystem. This may allow malicious applications to download and run additional payloads, or modify container files. If an application inside a container has to save something temporarily consider using a tmpfs. Add 'read_only: true' to this service to prevent this.
