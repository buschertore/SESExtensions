data/tempCode/+sub/src/contentScript/postMessage.ts:4:3:warning(wildcard-postmessage-configuration):  window.top?.postMessage({...payload, id: window.contentScript.id, extensionOrigin: EXTENSION_ORIGIN}, '*');:The target origin of the window.postMessage() API is set to "*". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.
data/tempCode/+sub/src/popup/contentScript/store/index.ts:83:9:warning(wildcard-postmessage-configuration):        source.postMessage(:The target origin of the window.postMessage() API is set to "*". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.
data/tempCode/+sub/src/popup/contentScript/store/index.ts:112:40:warning(wildcard-postmessage-configuration):      con.forEach(({ source }, idx) => source.postMessage({:The target origin of the window.postMessage() API is set to "*". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.
data/tempCode/+sub/src/popup/contentScript/store/index.ts:151:9:warning(wildcard-postmessage-configuration):        contentWindow.postMessage({:The target origin of the window.postMessage() API is set to "*". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.
data/tempCode/+sub/webpack.config.js:36:21:warning(path-join-resolve-traversal):      path: resolve(`dist-${browser}`):Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
data/tempCode/+sub/webpack.config.js:43:26:warning(path-join-resolve-traversal):        storage: resolve(`src/popup/platform/storage/${browser}/index.ts`),:Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
data/tempCode/+sub/webpack.config.js:44:40:warning(path-join-resolve-traversal):        "SnapToLinesHint.vue": resolve(`src/popup/appearance/components/platform/${browser}/SnapToLinesHint.vue`),:Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
data/tempCode/+sub/webpack.config.js:45:36:warning(path-join-resolve-traversal):        monkeyPatchApollo: resolve(`src/popup/platform/monkeyPatchApollo/${browser}/index.ts`),:Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
data/tempCode/+sub/webpack.config.js:46:38:warning(path-join-resolve-traversal):        onPageActionClicked: resolve(`src/background/platform/onPageActionClicked/${browser}/index.ts`):Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
