data/tempCode/download-blocker/extension/src/configuration.js:122:25:warning(detect-non-literal-regexp):            var regex = new RegExp(rule.fileNameRegex);:RegExp() called with a `rule` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.
data/tempCode/download-blocker/extension/src/inject.js:277:5:warning(insufficient-postmessage-origin-validation):    window.addEventListener("message", async function (x) {:No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
data/tempCode/download-blocker/extension/src/inject.js:39:13:warning(wildcard-postmessage-configuration):            window.top.postMessage(eventData, "*");:The target origin of the window.postMessage() API is set to "*". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.
