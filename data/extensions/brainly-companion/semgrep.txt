data/tempCode/brainly-companion/src/components/elements/_box.ts:43:39:warning(react-unsanitized-method):  box.insertAdjacentHTML("beforeend", data.children);:Detection of insertAdjacentHTML from non-constant definition. This can inadvertently expose users to cross-site scripting (XSS) attacks if this comes from user-provided input. If you have to use insertAdjacentHTML, consider using a sanitization library such as DOMPurify to sanitize your HTML.
data/tempCode/brainly-companion/src/components/elements/_button.ts:57:5:warning(react-unsanitized-method):    `<span class="sg-button__text">${data.text}</span>`:Detection of insertAdjacentHTML from non-constant definition. This can inadvertently expose users to cross-site scripting (XSS) attacks if this comes from user-provided input. If you have to use insertAdjacentHTML, consider using a sanitization library such as DOMPurify to sanitize your HTML.
data/tempCode/brainly-companion/src/components/elements/_icon.ts:20:3:error(insecure-document-method):  icon.innerHTML = /*html*/`:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/brainly-companion/src/components/elements/_radioGroup.ts:30:5:error(insecure-document-method):    radio.innerHTML = /*html*/`:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/brainly-companion/src/components/elements/_subjectIcon.ts:27:3:error(insecure-document-method):  icon.innerHTML = /*html*/`<use xlink:href="#icon-subject-${data.type}"></use>`;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/brainly-companion/src/lib/flashMsg.ts:24:3:error(insecure-document-method):  flashmsg.innerHTML = /*html*/`:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/brainly-companion/src/modals/Preview/Components/_item.tsx:80:100:warning(react-dangerouslysetinnerhtml):          <Text className="content scroll-container" breakWords dangerouslySetInnerHTML={{ __html: content }} />:Detection of dangerouslySetInnerHTML from non-constant definition. This can inadvertently expose users to cross-site scripting (XSS) attacks if this comes from user-provided input. If you have to use dangerouslySetInnerHTML, consider using a sanitization library such as DOMPurify to sanitize your HTML.
