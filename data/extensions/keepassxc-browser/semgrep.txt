data/tempCode/keepassxc-browser/keepassxc-browser/common/global.js:80:32:warning(detect-non-literal-regexp):    return secondUrlPart.match(new RegExp(re));:RegExp() called with a `firstUrlPart` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.
data/tempCode/keepassxc-browser/keepassxc-browser/common/translate.js:17:13:error(insecure-document-method):            item.innerHTML = translation;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/keepassxc-browser/keepassxc-browser/options/options.html:816:25:warning(plaintext-http-link):                    <br><a target="_blank" href="http://lukas-schulze.de" data-i18n="[title]openNewTab">Lukas Schulze</a>:This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.
