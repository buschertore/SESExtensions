data/tempCode/enhanced-github/src/utils/domUtil.js:65:16:warning(detect-eval-with-expression):    setTimeout(() => {:Detected use of dynamic execution of JavaScript which may come from user-input, which can lead to Cross-Site-Scripting (XSS). Where possible avoid including user-input in functions which dynamically execute user-input.
data/tempCode/enhanced-github/src/utils/handlersUtil.js:46:16:warning(detect-eval-with-expression):    setTimeout(function() {:Detected use of dynamic execution of JavaScript which may come from user-input, which can lead to Cross-Site-Scripting (XSS). Where possible avoid including user-input in functions which dynamically execute user-input.
data/tempCode/enhanced-github/src/utils/handlersUtil.js:24:46:warning(react-unsanitized-method):    btnGroup.insertAdjacentHTML('beforeend', btnGroupHtml);:Detection of insertAdjacentHTML from non-constant definition. This can inadvertently expose users to cross-site scripting (XSS) attacks if this comes from user-provided input. If you have to use insertAdjacentHTML, consider using a sanitization library such as DOMPurify to sanitize your HTML.
data/tempCode/enhanced-github/src/utils/handlersUtil.js:101:55:warning(react-unsanitized-method):            commitElem.insertAdjacentHTML('afterend', html);:Detection of insertAdjacentHTML from non-constant definition. This can inadvertently expose users to cross-site scripting (XSS) attacks if this comes from user-provided input. If you have to use insertAdjacentHTML, consider using a sanitization library such as DOMPurify to sanitize your HTML.
