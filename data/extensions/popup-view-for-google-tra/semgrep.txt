data/tempCode/popup-view-for-google-tra/deprecated/old - 1/src/data/content_script/inject.js:22:1:warning(insufficient-postmessage-origin-validation):window.addEventListener('message', e => {:No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
data/tempCode/popup-view-for-google-tra/deprecated/old - 1/src/data/content_script/inject.js:6:15:warning(wildcard-postmessage-configuration):  hide: () => window.top.postMessage({:The target origin of the window.postMessage() API is set to "*". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.
data/tempCode/popup-view-for-google-tra/deprecated/old - 1/src/data/content_script/inject.js:9:16:warning(wildcard-postmessage-configuration):  show: (e) => window.parent.postMessage({:The target origin of the window.postMessage() API is set to "*". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.
data/tempCode/popup-view-for-google-tra/deprecated/old - 1/src/data/content_script/inject.js:16:18:warning(wildcard-postmessage-configuration):  phrase: (p) => window.top.postMessage({:The target origin of the window.postMessage() API is set to "*". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.
data/tempCode/popup-view-for-google-tra/deprecated/old - 1/src/data/content_script/inject.js:37:9:warning(wildcard-postmessage-configuration):        window.parent.postMessage(ev, '*');:The target origin of the window.postMessage() API is set to "*". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.
data/tempCode/popup-view-for-google-tra/deprecated/old - 1/src/data/options/index.html:74:5:warning(plaintext-http-link):    <a href="http://add0n.com/dictionary.html" target="_blank">FAQs page</a>:This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.
data/tempCode/popup-view-for-google-tra/deprecated/old - 1/src/data/panel/inject.js:52:7:warning(wildcard-postmessage-configuration):      window.top.postMessage({:The target origin of the window.postMessage() API is set to "*". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.
data/tempCode/popup-view-for-google-tra/deprecated/old - 1/src/data/panel/inject.js:55:7:warning(wildcard-postmessage-configuration):      window.top.postMessage({:The target origin of the window.postMessage() API is set to "*". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.
data/tempCode/popup-view-for-google-tra/deprecated/old - 1/src/data/panel/inject.js:63:7:warning(wildcard-postmessage-configuration):      window.top.postMessage({:The target origin of the window.postMessage() API is set to "*". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.
data/tempCode/popup-view-for-google-tra/deprecated/old - 1/src/data/panel/inject.js:66:7:warning(wildcard-postmessage-configuration):      window.top.postMessage({:The target origin of the window.postMessage() API is set to "*". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.
data/tempCode/popup-view-for-google-tra/deprecated/old - 1/src/lib/safari/q.js:434:26:info(unsafe-formatstring):            console.warn(name + " is deprecated, use " + alternative +:Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.
data/tempCode/popup-view-for-google-tra/deprecated/old - 2/data/inject/inject.js:35:1:warning(insufficient-postmessage-origin-validation):window.addEventListener('message', e => {:No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
data/tempCode/popup-view-for-google-tra/deprecated/old - 2/data/inject/inject.js:5:14:warning(wildcard-postmessage-configuration):  show: e => window.parent.postMessage({:The target origin of the window.postMessage() API is set to "*". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.
data/tempCode/popup-view-for-google-tra/deprecated/old - 2/data/inject/inject.js:12:16:warning(wildcard-postmessage-configuration):  phrase: p => window.top.postMessage({:The target origin of the window.postMessage() API is set to "*". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.
data/tempCode/popup-view-for-google-tra/deprecated/old - 2/data/inject/inject.js:50:9:warning(wildcard-postmessage-configuration):        window.parent.postMessage(ev, '*');:The target origin of the window.postMessage() API is set to "*". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.
data/tempCode/popup-view-for-google-tra/deprecated/old - 2/data/inject/top.js:102:1:warning(insufficient-postmessage-origin-validation):window.addEventListener('message', e => {:No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
