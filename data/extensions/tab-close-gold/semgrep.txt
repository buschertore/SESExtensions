data/tempCode/tab-close-gold/src/background.ts:32:12:warning(detect-non-literal-regexp):			regex = new RegExp(searchPattern);:RegExp() called with a `searchPattern` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.
data/tempCode/tab-close-gold/src/options.ts:550:21:warning(detect-non-literal-regexp):                    new RegExp(args.item.pattern);:RegExp() called with a `args` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.
data/tempCode/tab-close-gold/src/publish.js:34:41:warning(path-join-resolve-traversal):        fs.copyFileSync(file, path.join(targetDir, path.basename(file)));:Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
data/tempCode/tab-close-gold/src/publish.js:34:52:warning(path-join-resolve-traversal):        fs.copyFileSync(file, path.join(targetDir, path.basename(file)));:Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
