data/tempCode/linkclump/src/background.js:51:5:error(insecure-document-method):    copyDiv.innerHTML = text;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/linkclump/src/linkclump.js:43:13:warning(detect-non-literal-regexp):			var re = new RegExp(response.blocked[i], "i");:RegExp() called with a `response` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.
data/tempCode/linkclump/src/pages/test_area.html:10:8:warning(plaintext-http-link):			<li><a href="http://www.google.com/">Google</a></li>:This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.
data/tempCode/linkclump/src/pages/test_area.html:11:8:warning(plaintext-http-link):			<li><a href="http://www.bing.com/">Bing</a></li>:This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.
data/tempCode/linkclump/src/pages/test_area.html:12:8:warning(plaintext-http-link):			<li><a href="http://www.yahoo.com/">Yahoo</a></li>:This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.
data/tempCode/linkclump/src/pages/test_area.html:13:8:warning(plaintext-http-link):			<li><a href="http://duckduckgo.com/">DuckDuckGo<a></li>:This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.
