data/tempCode/image-downloader/scripts/tasks.js:40:45:warning(path-join-resolve-traversal):  await fs.copy(path, join(outputDirectory, path), { recursive: true });:Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
data/tempCode/image-downloader/scripts/tasks.js:44:41:warning(path-join-resolve-traversal):  await fs.remove(join(outputDirectory, path));:Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
data/tempCode/image-downloader/scripts/watch.js:7:15:info(unsafe-formatstring):  console.log(`[${new Date().toLocaleTimeString()}]`, message, result || path);:Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.
data/tempCode/image-downloader/src/background/downloadImages.js:42:27:info(unsafe-formatstring):            console.error(`${image}:`, chrome.runtime.lastError.message);:Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.
