/home/codescan/resurrectio/casper.js:375:14:warning(incomplete-sanitization):  var text = item.text.replace('\n','').replace('\r', '\\r');:`item.text.replace` method will only replace the first occurrence when used with a string argument ('\n'). If this method is used for escaping of dangerous data then there is a possibility for a bypass. Try to use sanitization library instead or use a Regex with a global flag.
/home/codescan/resurrectio/casper.js:375:14:warning(incomplete-sanitization):  var text = item.text.replace('\n','').replace('\r', '\\r');:`item.text.replace('\n','').replace` method will only replace the first occurrence when used with a string argument ('\r'). If this method is used for escaping of dangerous data then there is a possibility for a bypass. Try to use sanitization library instead or use a Regex with a global flag.
/home/codescan/resurrectio/control.html:19:13:warning(plaintext-http-link):            <a class="navbar-brand" href="http://www.makina-corpus.com" target="_blank">:This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.
/home/codescan/resurrectio/control.html:61:15:warning(plaintext-http-link):              <a href="http://www.makina-corpus.com" target="_blank" title="Makina Corpus"><img alt="Makina Corpus" src="./makina-corpus.png" /></a>:This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.
/home/codescan/resurrectio/recorder.js:335:16:warning(incomplete-sanitization):        text = text.replace('\n', ' ');:`text.replace` method will only replace the first occurrence when used with a string argument ('\n'). If this method is used for escaping of dangerous data then there is a possibility for a bypass. Try to use sanitization library instead or use a Regex with a global flag.
/home/codescan/resurrectio/recorder.js:1074:12:warning(incomplete-sanitization):    return s.replace('\n', ' ').replace(/^\s*/, "").replace(/\s*$/, "");:`s.replace` method will only replace the first occurrence when used with a string argument ('\n'). If this method is used for escaping of dangerous data then there is a possibility for a bypass. Try to use sanitization library instead or use a Regex with a global flag.
