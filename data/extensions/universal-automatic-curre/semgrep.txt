data/tempCode/universal-automatic-curre/src/currencyConverter/Localization/ActiveLocalization.ts:234:15:warning(detect-non-literal-regexp):			const re = new RegExp( '(^|[\\W_])' + tag.tag + '($|[\\W_])', 'gm' ):RegExp() called with a `tag` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.
data/tempCode/universal-automatic-curre/vite.build.ts:24:47:warning(path-join-resolve-traversal):    if (fs.existsSync(path.resolve(__dirname, dir))):Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
data/tempCode/universal-automatic-curre/vite.build.ts:25:43:warning(path-join-resolve-traversal):        fs.rmSync(path.resolve(__dirname, dir), {recursive: true, force: true}):Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
data/tempCode/universal-automatic-curre/vite.build.ts:34:52:warning(path-join-resolve-traversal):        if (!fs.existsSync(path.resolve(__dirname, partialPath))):Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
data/tempCode/universal-automatic-curre/vite.build.ts:35:50:warning(path-join-resolve-traversal):            fs.mkdirSync(path.resolve(__dirname, partialPath)):Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
data/tempCode/universal-automatic-curre/vite.build.ts:49:52:warning(path-join-resolve-traversal):            entry: path.resolve(__dirname, srcDir, entry),:Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
