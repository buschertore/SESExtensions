data/tempCode/darkness-beautiful-dark-t/chrome-extension/html/settings.html:295:6:warning(django-no-csrf-token):					<form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_blank" id="drk_paypal_form">:Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks
data/tempCode/darkness-beautiful-dark-t/chrome-extension/js/background/mixpanel-2-latest.js:965:21:warning(detect-non-literal-regexp):            regex = new RegExp(regexS),:RegExp() called with a `param` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.
data/tempCode/darkness-beautiful-dark-t/chrome-extension/js/page.js:175:4:error(insecure-document-method):			document.getElementsByClassName('drk_settings_global_msg_text')[0].innerHTML = msg;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/darkness-beautiful-dark-t/chrome-extension/js/page.js:242:4:error(insecure-document-method):			d.innerHTML = ASSETS.HTML;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/darkness-beautiful-dark-t/chrome-extension/js/settings.js:479:4:error(insecure-document-method):			d.innerHTML = ASSETS.HTML;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
