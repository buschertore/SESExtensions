data/tempCode/doi-resolver/src/autolink.ts:57:22:warning(detect-non-literal-regexp):          const re = new RegExp(exclusion.slice(1, -1), 'i');:RegExp() called with a `exclusion` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.
data/tempCode/doi-resolver/src/pages/bubble.ts:210:5:error(insecure-document-method):    this.elements_.messageOutput.innerHTML = message;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/bubble.ts:441:9:error(insecure-document-method):        element.innerHTML = message;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/bubble.ts:456:9:error(insecure-document-method):        element.innerHTML = message;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/citation.ts:413:5:error(insecure-document-method):    this.elements_.notifyDiv.innerHTML = message;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/citation.ts:423:5:error(insecure-document-method):    this.elements_.citeDiv.innerHTML = citation;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/citation.ts:675:9:error(insecure-document-method):        element.innerHTML = message;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/citation.ts:693:7:error(insecure-document-method):      modalLabel.innerHTML = chrome.i18n.getMessage('headingHistory');:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/options.ts:467:7:error(insecure-document-method):      titleElm.innerHTML = title;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/options.ts:468:7:error(insecure-document-method):      bodyElm.innerHTML = body;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/options.ts:990:5:error(insecure-document-method):    this.elements_.doiResolverOutput.innerHTML = drPreview;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/options.ts:991:5:error(insecure-document-method):    this.elements_.shortDoiResolverOutput.innerHTML = srPreview;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/options.ts:1008:7:error(insecure-document-method):      autolinkTestExclusionResult.innerHTML = chrome.i18n.getMessage(:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/options.ts:1018:7:error(insecure-document-method):      autolinkTestExclusionResult.innerHTML = chrome.i18n.getMessage('autolinkExclusionsMatch');:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/options.ts:1021:7:error(insecure-document-method):      autolinkTestExclusionResult.innerHTML = chrome.i18n.getMessage('autolinkExclusionsNoMatch');:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/options.ts:1586:7:error(insecure-document-method):      element.innerHTML = message;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/options.ts:1594:9:error(insecure-document-method):        element.innerHTML = message;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/options.ts:1599:5:error(insecure-document-method):    this.elements_.doiResolverInputReset.innerHTML = doiResetMessage;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/options.ts:1600:5:error(insecure-document-method):    this.elements_.shortDoiResolverInputReset.innerHTML = doiResetMessage;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/options.ts:1602:5:error(insecure-document-method):    this.elements_.doiOutputUrlExample.innerHTML = urlExampleMessage;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/options.ts:1603:5:error(insecure-document-method):    this.elements_.shortDoiOutputUrlExample.innerHTML = urlExampleMessage;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/options.ts:1608:7:error(insecure-document-method):      icon.innerHTML = chrome.i18n.getMessage('svgIconCopy');:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/options.ts:1612:7:error(insecure-document-method):      icon.innerHTML = chrome.i18n.getMessage('svgIconHistory');:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/options.ts:1616:7:error(insecure-document-method):      icon.innerHTML = chrome.i18n.getMessage('svgIconCog');:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/options.ts:1620:7:error(insecure-document-method):      icon.innerHTML = chrome.i18n.getMessage('svgIconInfo');:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/options.ts:1623:5:error(insecure-document-method):    this.elements_.extensionVersion.innerHTML = chrome.runtime.getManifest().version;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/qr.ts:700:5:error(insecure-document-method):    this.elements_.notifyDiv.innerHTML = message;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/qr.ts:956:5:error(insecure-document-method):    headings[0].innerHTML = chrome.i18n.getMessage('qrTitleStatus');:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/qr.ts:957:5:error(insecure-document-method):    contents[0].innerHTML = titleNotice;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/qr.ts:958:5:error(insecure-document-method):    headings[1].innerHTML = chrome.i18n.getMessage('qrMessageEncoded');:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/qr.ts:959:5:error(insecure-document-method):    contents[1].innerHTML = message;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/qr.ts:1015:9:error(insecure-document-method):        element.innerHTML = message;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/qr.ts:1033:7:error(insecure-document-method):      modalLabel.innerHTML = chrome.i18n.getMessage('headingHistory');:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/pages/utils.ts:45:9:error(insecure-document-method):        container.innerHTML = rawTitle;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/doi-resolver/src/utils.ts:163:19:warning(detect-non-literal-regexp):    const regex = new RegExp(search, 'i');:RegExp() called with a `text` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.
