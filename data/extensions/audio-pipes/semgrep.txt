data/tempCode/audio-pipes/js/background.js:96:15:info(unsafe-formatstring):  console.log("incoming message " + message.type, message, port);:Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.
data/tempCode/audio-pipes/js/inject-tracing.js:36:3:warning(insufficient-postmessage-origin-validation):  window.addEventListener("message", function (event) {:No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
data/tempCode/audio-pipes/js/rtc.js:147:3:warning(insufficient-postmessage-origin-validation):  window.addEventListener("message", function (event) {:No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
data/tempCode/audio-pipes/js/tracing.js:526:3:warning(insufficient-postmessage-origin-validation):  window.addEventListener('message', function(event) {:No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
