data/tempCode/media-harvest-twitter-med/src/backend/downloads/useCases/downloadActionUseCase.ts:52:16:info(unsafe-formatstring):  console.info(`Fetching media info. (${apiVersion})\n`, data):Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.
data/tempCode/media-harvest-twitter-med/src/content_script/utils/maker.ts:17:3:error(insecure-document-method):  wrapper.innerHTML = htmlString.trim():User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/media-harvest-twitter-med/webpack.config.js:194:52:warning(path-join-resolve-traversal):  const OUTPUT_DIR = path.join(__dirname, 'build', BUILD_TARGET):Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
data/tempCode/media-harvest-twitter-med/webpack.config.js:204:5:warning(path-join-resolve-traversal):    BROWSER,:Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
data/tempCode/media-harvest-twitter-med/webpack.config.js:210:41:warning(path-join-resolve-traversal):    path: path.join(__dirname, 'build', env.target),:Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
data/tempCode/media-harvest-twitter-med/webpack.config.js:257:21:warning(path-join-resolve-traversal):                    `${BUILD_TARGET}-TwitterMediaHarvest-v${VERSION}.zip`:Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
