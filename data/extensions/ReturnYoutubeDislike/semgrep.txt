/home/codescan/return-youtube-dislike/Extensions/UserScript/Return Youtube Dislike.user.js:399:7:warning(react-unsanitized-method):      `:Detection of insertAdjacentHTML from non-constant definition. This can inadvertently expose users to cross-site scripting (XSS) attacks if this comes from user-provided input. If you have to use insertAdjacentHTML, consider using a sanitization library such as DOMPurify to sanitize your HTML.
/home/codescan/return-youtube-dislike/Extensions/combined/changelog/changelog.js:37:7:error(insecure-document-method):      obj.innerHTML = valNewH;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
/home/codescan/return-youtube-dislike/Extensions/combined/popup.js:43:7:error(insecure-document-method):      obj.innerHTML = valNewH;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
/home/codescan/return-youtube-dislike/Extensions/combined/popup.js:113:5:error(insecure-document-method):    advancedToggle.innerHTML = config.showAdvancedMessage;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
/home/codescan/return-youtube-dislike/Extensions/combined/popup.js:118:5:error(insecure-document-method):    advancedToggle.innerHTML = config.hideAdvancedMessage;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
/home/codescan/return-youtube-dislike/Extensions/combined/popup.js:139:3:error(insecure-document-method):  document.getElementById("ext-version").innerHTML = "v" + version;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
/home/codescan/return-youtube-dislike/Extensions/combined/popup.js:147:9:error(insecure-document-method):        document.getElementById("ext-update").innerHTML =:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
/home/codescan/return-youtube-dislike/Extensions/combined/popup.js:220:3:error(insecure-document-method):  document.getElementById("number_format_compactShort").innerHTML =:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
/home/codescan/return-youtube-dislike/Extensions/combined/popup.js:222:3:error(insecure-document-method):  document.getElementById("number_format_compactLong").innerHTML =:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
/home/codescan/return-youtube-dislike/Extensions/combined/popup.js:224:3:error(insecure-document-method):  document.getElementById("number_format_standard").innerHTML =:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
/home/codescan/return-youtube-dislike/Extensions/combined/src/bar.js:109:9:error(insecure-document-method):        document.querySelector("#ryd-dislike-tooltip > #tooltip").innerHTML =:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
/home/codescan/return-youtube-dislike/Extensions/combined/src/bar.js:72:11:warning(react-unsanitized-method):          `:Detection of insertAdjacentHTML from non-constant definition. This can inadvertently expose users to cross-site scripting (XSS) attacks if this comes from user-provided input. If you have to use insertAdjacentHTML, consider using a sanitization library such as DOMPurify to sanitize your HTML.
/home/codescan/return-youtube-dislike/Website/layouts/default.vue:72:7:warning(avoid-v-html):      <span class="my-auto" v-html="alert.html"></span>:Dynamically rendering arbitrary HTML on your website can be very dangerous because it can easily lead to XSS vulnerabilities. Only use HTML interpolation on trusted content and never on user-provided content.
/home/codescan/return-youtube-dislike/Website/pages/faq.vue:18:11:warning(avoid-v-html):          <span v-html="$vuetify.lang.t(`$vuetify.faq.bullet${i}text`)" />:Dynamically rendering arbitrary HTML on your website can be very dangerous because it can easily lead to XSS vulnerabilities. Only use HTML interpolation on trusted content and never on user-provided content.
/home/codescan/return-youtube-dislike/webpack.config.js:39:54:warning(path-join-resolve-traversal):      path.join(__dirname, "./Extensions/combined/", `${entry}.js`),:Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
