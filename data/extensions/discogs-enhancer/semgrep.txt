data/tempCode/discogs-enhancer/html/learn.html:827:262:warning(plaintext-http-link):      <p>Adds several buttons to reviews, comments and forum/group reply boxes that allow you to quickly insert <a href="https://www.discogs.com/help/doc/text-formatting" target="_blank" rel="noopener noreferrer">text formatting shortcuts.</a> See a quick demo <a href="http://i.imgur.com/DCAQfeB.gif" target="_blank" rel="noopener noreferrer">here.</a></p>:This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.
data/tempCode/discogs-enhancer/html/learn.html:865:144:warning(plaintext-http-link):      <p>This will *attempt* to insert visual dividers between each side, disc, and/or format of a release in order to make it easier to read. <a href="http://i.imgur.com/PQtRpkO.gif" target="_blank" rel="noopener noreferrer">Here's a short gif to see it in action.</a></p>:This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.
data/tempCode/discogs-enhancer/html/learn.html:874:262:warning(plaintext-http-link):        <b>Note:</b> There is no single standard when it comes to listing releases with multiple formats. Because of this, there is no guarantee that the dividers will be correctly inserted for every release. Incorrect data may cause problems for this feature. <a class="secret" href="http://i0.kym-cdn.com/photos/images/original/000/022/036/Screen_shot_2009-10-09_at_4.42.45_PM.png">Safety Not Guaranteed</a>.:This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.
data/tempCode/discogs-enhancer/html/learn.html:1052:9:warning(plaintext-http-link):        <a href="http://www.msalcido.com" class="no-underline">© <span id="year"></span> msalcido.com</a>:This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.
data/tempCode/discogs-enhancer/html/welcome.html:50:11:warning(plaintext-http-link):          <a href="http://www.msalcido.com" class="no-underline">© msalcido.com</a>:This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.
data/tempCode/discogs-enhancer/js/extension/dependencies/hashes.js:106:33:info(unsafe-formatstring):    }).catch(err => console.log(`Discogs Enhancer could not fetchData for ${type}`, err));:Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.
data/tempCode/discogs-enhancer/js/extension/features/average-price.js:36:7:error(insecure-document-method):      div.innerHTML = data;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/average-price.js:37:7:error(insecure-document-method):      li.innerHTML = `<span class="de-average-price">Average:</span> <span style="font-weight: bold;">${div.querySelector('#page_content ul li:nth-child(2)').textContent.trim().split(' ')[0]}</span>`;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/block-buyers.js:28:7:error(insecure-document-method):      div.innerHTML = data;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/block-sellers-popover.js:73:49:warning(react-unsanitized-method):        popover.insertAdjacentHTML('beforeend', popoverMarkup);:Detection of insertAdjacentHTML from non-constant definition. This can inadvertently expose users to cross-site scripting (XSS) attacks if this comes from user-provided input. If you have to use insertAdjacentHTML, consider using a sanitization library such as DOMPurify to sanitize your HTML.
data/tempCode/discogs-enhancer/js/extension/features/editing-notepad.js:271:5:error(insecure-document-method):    notepadArea.innerHTML = getNotepadTextPreference();:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/everlasting-collection-notes.js:84:5:error(insecure-document-method):    target.querySelector('.notes_text').innerHTML = res.html;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/everlasting-collection-ratings.js:55:43:warning(react-unsanitized-method):			rating.insertAdjacentHTML('beforeend', starTemplate(value));:Detection of insertAdjacentHTML from non-constant definition. This can inadvertently expose users to cross-site scripting (XSS) attacks if this comes from user-provided input. If you have to use insertAdjacentHTML, consider using a sanitization library such as DOMPurify to sanitize your HTML.
data/tempCode/discogs-enhancer/js/extension/features/everlasting-collection-sm-med.js:125:9:error(insecure-document-method):        div.innerHTML = response;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/everlasting-marketplace-release-page.js:126:9:error(insecure-document-method):        div.innerHTML = data;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/everlasting-marketplace-release-page.js:167:63:error(insecure-document-method):        document.querySelectorAll('.de-pause').forEach(p => { p.parentElement.innerHTML = playBtn; });:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/everlasting-marketplace-release-page.js:179:9:error(insecure-document-method):        event.target.outerHTML = pauseBtn;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/everlasting-marketplace-release-page.js:201:35:error(insecure-document-method):      resumeBtns.forEach(btn => { btn.parentElement.innerHTML = pauseBtn; });:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/everlasting-marketplace.js:108:9:error(insecure-document-method):        div.innerHTML = data;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/everlasting-marketplace.js:150:63:error(insecure-document-method):        document.querySelectorAll('.de-pause').forEach(p => { p.parentElement.innerHTML = playBtn; });:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/everlasting-marketplace.js:162:9:error(insecure-document-method):        event.target.outerHTML = pauseBtn;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/everlasting-marketplace.js:184:35:error(insecure-document-method):      resumeBtns.forEach(btn => { btn.parentElement.innerHTML = pauseBtn; });:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/feedback-notifier-new.js:264:5:error(insecure-document-method):    div.innerHTML = data;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/feedback-notifier-new.js:281:5:error(insecure-document-method):    div.innerHTML = data;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/feedback-notifier-new.js:483:19:info(unsafe-formatstring):      console.log(type + ' obj: ', feedback[type]);:Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.
data/tempCode/discogs-enhancer/js/extension/features/feedback-notifier.js:264:5:error(insecure-document-method):    div.innerHTML = data;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/feedback-notifier.js:281:5:error(insecure-document-method):    div.innerHTML = data;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/feedback-notifier.js:483:19:info(unsafe-formatstring):      console.log(type + ' obj: ', feedback[type]);:Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.
data/tempCode/discogs-enhancer/js/extension/features/filter-monitor.js:152:7:error(insecure-document-method):      div.innerHTML = window.setFilterStateText(mc, sc);:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/inventory-scanner.js:83:9:error(insecure-document-method):        div.innerHTML = data;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/quick-search-react.js:95:5:error(insecure-document-method):    releaseTitle.innerHTML = newReleaseMarkup;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/rating-percent-react.js:23:7:error(insecure-document-method):      releasePageRating.innerHTML += ` <span class="de-percentage">(${Math.floor(percent)}%)</span>`;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/rating-percent.js:22:5:error(insecure-document-method):    releasePageRating.parentElement.innerHTML += `<span class="de-percentage">(${Math.floor(percent)}%)</span>`;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/rating-percent.js:28:5:error(insecure-document-method):    sellPageRating.innerHTML += ` <span class="de-percentage">(${Math.floor(percent)}%)</span>`;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/release-ratings.js:74:7:error(insecure-document-method):      div.innerHTML = data;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/release-ratings.js:81:9:warning(react-unsanitized-method):        `Ratings: <a href="${href}" target="_blank">${rating}</a>`:Detection of insertAdjacentHTML from non-constant definition. This can inadvertently expose users to cross-site scripting (XSS) attacks if this comes from user-provided input. If you have to use insertAdjacentHTML, consider using a sanitization library such as DOMPurify to sanitize your HTML.
data/tempCode/discogs-enhancer/js/extension/features/release-scanner-artist-label.js:71:7:error(insecure-document-method):      div.innerHTML = data;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/release-scanner.js:43:7:error(insecure-document-method):      div.innerHTML = data;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/shopping-spree-mode-new.js:68:5:error(insecure-document-method):    link.innerHTML = markup;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/shopping-spree-mode.js:68:5:error(insecure-document-method):    link.innerHTML = markup;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/show-sellers-in-cart.js:49:5:error(insecure-document-method):    div.innerHTML = data;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/sort-explore-lists.js:104:7:error(insecure-document-method):      document.querySelector('.react-modal-content div').innerHTML = storage.innerHTML;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/sort-marketplace-lists.js:77:7:error(insecure-document-method):      moreFiltersContainer.innerHTML = moreFiltersStorage.innerHTML;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/sort-marketplace-lists.js:111:7:error(insecure-document-method):      document.querySelector(`${filterSelector}${filterTarget}`).innerHTML = storage.innerHTML;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/sort-personal-lists.js:138:9:error(insecure-document-method):        select.innerHTML = storage.innerHTML;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/suggested-prices-release-page.js:80:7:error(insecure-document-method):      div.innerHTML = data;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/suggested-prices-release-page.js:142:13:error(insecure-document-method):            spanOuter.innerHTML = rl.css.noData;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/suggested-prices-single.js:96:9:error(insecure-document-method):        div.innerHTML = data;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/suggested-prices-single.js:153:9:error(insecure-document-method):        spanOuter.innerHTML = rl.css.noData;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/tweak-discriminators-react.js:77:9:error(insecure-document-method):        s.innerHTML = s.textContent.replace(re, markup);:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/tweak-discriminators-react.js:97:7:error(insecure-document-method):      s.innerHTML = s.textContent.replace(re, markup);:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/tweak-discriminators.js:76:7:error(insecure-document-method):      s.innerHTML = s.textContent.replace(re, markup);:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/features/tweak-discriminators.js:94:7:error(insecure-document-method):      s.innerHTML = s.textContent.replace(re, markup);:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/extension/user-preferences.js:207:37:warning(detect-non-literal-regexp):  let match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));:RegExp() called with a `name` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.
data/tempCode/discogs-enhancer/js/extension/user-preferences.js:1282:24:warning(insecure-object-assign):            newPrefs = Object.assign(oldPrefs, { featureData }, { currentFilterState }, { userCurrency });:Depending on the context, user control data in `Object.assign` can cause web response to include data that it should not have or can lead to a mass assignment vulnerability.
data/tempCode/discogs-enhancer/js/popup/configuration-pages/blocked-sellers.js:90:9:error(insecure-document-method):        node.innerHTML = `<div class="seller-name" data-name=${seller}>:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/popup/configuration-pages/favorite-sellers.js:88:7:error(insecure-document-method):      node.innerHTML = `<div class="seller-name" data-name=${seller}>:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/popup/configuration-pages/filter-shipping-country.js:85:7:error(insecure-document-method):      node.innerHTML = `<div class="country-name" data-name=${country}>:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/popup/configuration-pages/learn.js:177:9:error(insecure-document-method):        span.innerHTML = thank;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/popup/configuration-pages/learn.js:247:7:error(insecure-document-method):      summary.innerHTML = index === 0 ? (`${tag} <span style=${styles}> - Latest Version</span>`) : tag;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/popup/configuration-pages/learn.js:249:7:error(insecure-document-method):      p.innerHTML = html;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/popup/popup-logic/features/filter-prices.js:89:7:error(insecure-document-method):      values.innerHTML = `&#8209; Min: ${currCode[userCurrency]}${minimum}`;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/popup/popup-logic/features/filter-prices.js:91:7:error(insecure-document-method):      values.innerHTML = `&#8209; Max: ${currCode[userCurrency]}${maximum}`;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/popup/popup-logic/features/filter-prices.js:93:7:error(insecure-document-method):      values.innerHTML = `&#8209; Min: ${currCode[userCurrency]}${minimum} / Max: ${currCode[userCurrency]}${maximum}`;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/popup/popup-logic/features/inventory-ratings.js:59:9:error(insecure-document-method):        inventoryValue.innerHTML = `&#8209; ${input.value}`;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/popup/popup-logic/features/inventory-ratings.js:103:7:error(insecure-document-method):      ratingDisplay.innerHTML = `&#8209; ${input.value}`;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/popup/popup-logic/features/inventory-scanner.js:57:7:error(insecure-document-method):      savedValue.innerHTML = `&#8209; ${input.value}%`;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/popup/popup-logic/features/inventory-scanner.js:104:7:error(insecure-document-method):      savedValue.innerHTML = `&#8209; ${input.value}%`;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/popup/popup-logic/features/seller-rep.js:69:7:error(insecure-document-method):      repValue.innerHTML = `&#8209; ${input.value}%`;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/discogs-enhancer/js/popup/popup-logic/features/seller-rep.js:133:9:error(insecure-document-method):        repValue.innerHTML = `&#8209; ${input.value}%`;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
