data/tempCode/hack-the-news/src/ui/components/TopStory/template.hbs:3:5:warning(var-in-href):    <a href="{{@story.url}}" target="_blank">{{@story.title}}</a>:Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.
data/tempCode/hack-the-news/src/ui/components/TopStory/template.hbs:7:33:warning(var-in-href):    {{@story.points}} points by <a href="{{@story.userUrl}}" target="_blank">{{@story.userName}}</a>:Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.
data/tempCode/hack-the-news/src/ui/components/TopStory/template.hbs:8:5:warning(var-in-href):    <a href="{{@story.discussUrl}}" target="_blank">{{@story.timestamp}}</a>:Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.
data/tempCode/hack-the-news/src/ui/components/TopStory/template.hbs:9:7:warning(var-in-href):    | <a href="{{@story.discussUrl}}" target="_blank">Discuss</a>:Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.
data/tempCode/hack-the-news/src/ui/components/TopStory/template.hbs:10:7:warning(var-in-href):    | <a href="{{@story.discussUrl}}" target="_blank">{{@story.comments}} comments</a>:Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.
data/tempCode/hack-the-news/src/ui/index.html:20:18:error(var-in-script-tag):    <script src="{{rootURL}}app.js"></script>:Detected a template variable used in a script tag. Although template variables are HTML escaped, HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one available in OWASP ESAPI. For Django, you may also consider using the 'json_script' template tag and retrieving the data in your script by using the element ID (e.g., `document.getElementById`).
