data/tempCode/%EC%B9%98%EC%A6%88-%EB%82%98%EC%9D%B4%ED%94%84-%EC%B9%98%EC%A7%80%EC%A7%81-%EB%8F%84%EA%B5%AC-%EB%AA%A8%EC%9D%8C/.github/workflows/publish.yml:35:9:error(run-shell-injection):        run: npm version --no-git-tag-version ${{ github.event.inputs.version }}:Using variable interpolation `${{...}}` with `github` context data in a `run:` step could allow an attacker to inject their own code into the runner. This would allow them to steal secrets and code. `github` context data can have arbitrary user input and should be treated as untrusted. Instead, use an intermediate environment variable with `env:` to store the data and use the environment variable in the `run:` script. Be sure to use double-quotes the environment variable, like this: "$ENVVAR".
data/tempCode/%EC%B9%98%EC%A6%88-%EB%82%98%EC%9D%B4%ED%94%84-%EC%B9%98%EC%A7%80%EC%A7%81-%EB%8F%84%EA%B5%AC-%EB%AA%A8%EC%9D%8C/web/inject.js:637:7:error(insecure-document-method):      icon.innerHTML = iconSvg;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/%EC%B9%98%EC%A6%88-%EB%82%98%EC%9D%B4%ED%94%84-%EC%B9%98%EC%A7%80%EC%A7%81-%EB%8F%84%EA%B5%AC-%EB%AA%A8%EC%9D%8C/web/inject.js:639:7:error(insecure-document-method):      b.innerHTML = iconSvg;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/%EC%B9%98%EC%A6%88-%EB%82%98%EC%9D%B4%ED%94%84-%EC%B9%98%EC%A7%80%EC%A7%81-%EB%8F%84%EA%B5%AC-%EB%AA%A8%EC%9D%8C/web/inject.js:92:1:warning(insufficient-postmessage-origin-validation):window.addEventListener("message", (e) => {:No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
data/tempCode/%EC%B9%98%EC%A6%88-%EB%82%98%EC%9D%B4%ED%94%84-%EC%B9%98%EC%A7%80%EC%A7%81-%EB%8F%84%EA%B5%AC-%EB%AA%A8%EC%9D%8C/web/main.js:13:3:warning(insufficient-postmessage-origin-validation):  window.addEventListener("message", async (e) => {:No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
