data/tempCode/buzz-phone-for-google-chr/src/buzz-api.js:6:9:warning(insufficient-postmessage-origin-validation):        window.addEventListener('message', function(event) {:No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
data/tempCode/buzz-phone-for-google-chr/src/buzz-content-script.js:65:5:warning(insufficient-postmessage-origin-validation):    window.addEventListener('message', (event) => {:No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
data/tempCode/buzz-phone-for-google-chr/src/buzz-content-script.js:36:17:warning(wildcard-postmessage-configuration):                window.postMessage({:The target origin of the window.postMessage() API is set to "*". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.
data/tempCode/buzz-phone-for-google-chr/src/buzz-content-script.js:44:17:warning(wildcard-postmessage-configuration):                window.postMessage({:The target origin of the window.postMessage() API is set to "*". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.
data/tempCode/buzz-phone-for-google-chr/src/buzz-content-script.js:53:13:warning(wildcard-postmessage-configuration):            window.postMessage({:The target origin of the window.postMessage() API is set to "*". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.
data/tempCode/buzz-phone-for-google-chr/src/buzz-content-script.js:116:29:warning(wildcard-postmessage-configuration):                            window.postMessage({:The target origin of the window.postMessage() API is set to "*". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.
data/tempCode/buzz-phone-for-google-chr/src/buzz-content-script.js:129:25:warning(wildcard-postmessage-configuration):                        window.postMessage({:The target origin of the window.postMessage() API is set to "*". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.
data/tempCode/buzz-phone-for-google-chr/src/buzz-content-script.js:140:21:warning(wildcard-postmessage-configuration):                    window.postMessage({:The target origin of the window.postMessage() API is set to "*". This could allow for information disclosure due to the possibility of any origin allowed to receive the message.
data/tempCode/buzz-phone-for-google-chr/src/lib/BuzzOffscreen.js:268:36:warning(detect-non-literal-regexp):            state.externalAPIURL = new RegExp(opts.sync_opts.external_api);:RegExp() called with a `opts` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.
data/tempCode/buzz-phone-for-google-chr/src/lib/BuzzPopup.js:228:13:error(insecure-document-method):            err.innerHTML = data.message;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/buzz-phone-for-google-chr/src/lib/BuzzPopup.js:231:13:error(insecure-document-method):            inf.innerHTML = data.message;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/buzz-phone-for-google-chr/src/lib/BuzzPopup.js:359:5:error(insecure-document-method):    elem.querySelector('.details').innerHTML = details;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/buzz-phone-for-google-chr/src/lib/BuzzPopup.js:369:9:error(insecure-document-method):        document.getElementById('buzz-log').innerHTML = log;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
