data/tempCode/cookie-editor/interface/lib/animate.js:226:28:warning(incomplete-sanitization):    const elMaxHeightInt = elMaxHeight.replace('px', '').replace('%', '');:`elMaxHeight.replace('px', '').replace` method will only replace the first occurrence when used with a string argument ('%'). If this method is used for escaping of dangerous data then there is a possibility for a bypass. Try to use sanitization library instead or use a Regex with a global flag.
data/tempCode/cookie-editor/interface/lib/animate.js:259:12:warning(incomplete-sanitization):    return el.style.maxHeight.replace('px', '').replace('%', '') === '0';:`el.style.maxHeight.replace('px', '').replace` method will only replace the first occurrence when used with a string argument ('%'). If this method is used for escaping of dangerous data then there is a possibility for a bypass. Try to use sanitization library instead or use a Regex with a global flag.
data/tempCode/cookie-editor/site/404.html:14:2:warning(missing-integrity):	<link rel="canonical" href="https://cookie-editor.com/404">:This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.
data/tempCode/cookie-editor/site/index.html:14:2:warning(missing-integrity):	<link rel="canonical" href="https://cookie-editor.com/">:This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.
data/tempCode/cookie-editor/site/privacy.html:14:2:warning(missing-integrity):	<link rel="canonical" href="https://cookie-editor.com/privacy.html">:This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.
