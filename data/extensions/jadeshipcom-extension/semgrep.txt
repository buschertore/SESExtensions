data/tempCode/jadeshipcom-extension/src/content_script.ts:113:46:warning(react-unsanitized-method):      elem.insertAdjacentHTML('beforebegin', getImageAgent(selectedAgent));:Detection of insertAdjacentHTML from non-constant definition. This can inadvertently expose users to cross-site scripting (XSS) attacks if this comes from user-provided input. If you have to use insertAdjacentHTML, consider using a sanitization library such as DOMPurify to sanitize your HTML.
data/tempCode/jadeshipcom-extension/src/toolbar.ts:86:11:error(insecure-document-method):          button.innerHTML = `${getPlatformImage(:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/jadeshipcom-extension/src/toolbar.ts:90:11:error(insecure-document-method):          button.innerHTML = `${getImageAgent(agent)} ${agent}`;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/jadeshipcom-extension/src/toolbar.ts:92:11:error(insecure-document-method):          button.innerHTML = getImageAgent(agent);:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/jadeshipcom-extension/src/toolbar.ts:95:9:error(insecure-document-method):        div.innerHTML = `${div.innerHTML} ${button.outerHTML}`;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/jadeshipcom-extension/src/toolbar.ts:108:11:error(insecure-document-method):          button.innerHTML = `${getImageAgent(agent)} ${agent}`;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/jadeshipcom-extension/src/toolbar.ts:110:11:error(insecure-document-method):          button.innerHTML = getImageAgent(agent);:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/jadeshipcom-extension/src/toolbar.ts:113:9:error(insecure-document-method):        div.innerHTML = `${div.innerHTML} ${button.outerHTML}`;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/jadeshipcom-extension/src/toolbar.ts:202:3:error(insecure-document-method):  webLinks.innerHTML = `${qcString ?? '<div></div>'} ${:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/jadeshipcom-extension/src/toolbar.ts:205:3:error(insecure-document-method):  inner.innerHTML = `${webLinks.outerHTML} ${:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/jadeshipcom-extension/src/toolbar.ts:208:3:error(insecure-document-method):  elem.innerHTML = inner.outerHTML;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
