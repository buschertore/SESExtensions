data/tempCode/chhoetaigi-%E6%89%BE%E5%8F%B0%E8%AA%9E/scripts/build-zip.js:29:49:warning(path-join-resolve-traversal):  const stream = fs.createWriteStream(path.join(dist, zipFilename));:Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
data/tempCode/chhoetaigi-%E6%89%BE%E5%8F%B0%E8%AA%9E/scripts/build-zip.js:29:55:warning(path-join-resolve-traversal):  const stream = fs.createWriteStream(path.join(dist, zipFilename));:Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
data/tempCode/chhoetaigi-%E6%89%BE%E5%8F%B0%E8%AA%9E/scripts/src-zip.js:29:49:warning(path-join-resolve-traversal):  const stream = fs.createWriteStream(path.join(dist, zipFilename));:Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
data/tempCode/chhoetaigi-%E6%89%BE%E5%8F%B0%E8%AA%9E/scripts/src-zip.js:29:55:warning(path-join-resolve-traversal):  const stream = fs.createWriteStream(path.join(dist, zipFilename));:Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.
