data/tempCode/oh-my-ig/app/scripts/chromereload.js:7:35:error(detect-insecure-websocket):const connection = new WebSocket(`ws://${LIVERELOAD_HOST}${LIVERELOAD_PORT}/livereload`);:Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
data/tempCode/oh-my-ig/app/scripts/src/database.js:8:19:warning(detect-non-literal-regexp):    this.regexp = new RegExp(q, 'i');:RegExp() called with a `q` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.
data/tempCode/oh-my-ig/app/scripts/src/fetcher.js:66:7:error(insecure-document-method):      doc.documentElement.innerHTML = html;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
data/tempCode/oh-my-ig/app/scripts/src/fetcher.js:71:7:error(insecure-document-method):      doc.innerHTML = html;:User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities
