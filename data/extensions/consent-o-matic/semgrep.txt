data/tempCode/consent-o-matic/Extension/Action.js:71:27:info(unsafe-formatstring):            console.group(this.constructor.name + ":", this.config, param);:Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.
data/tempCode/consent-o-matic/Extension/Action.js:186:29:info(unsafe-formatstring):                console.log("Clicking: [openInTab: " + this.config.openInTab + "]", result.target);:Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.
data/tempCode/consent-o-matic/Extension/Action.js:829:26:info(unsafe-formatstring):            console.warn("CMP does not have method ["+methodName+"]", this.cmp);:Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.
data/tempCode/consent-o-matic/Extension/background.js:41:43:warning(insecure-object-assign):                let combinedCustomRules = Object.assign({}, customRules, newRule);:Depending on the context, user control data in `Object.assign` can cause web response to include data that it should not have or can lead to a mass assignment vulnerability.
data/tempCode/consent-o-matic/Extension/contentScript.js:107:1:warning(insufficient-postmessage-origin-validation):window.addEventListener("message", (event)=>{:No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
data/tempCode/consent-o-matic/Extension/language.js:1518:30:info(unsafe-formatstring):                console.warn("Missing translation [" + lang + "] for key: ", key, translation);:Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.
